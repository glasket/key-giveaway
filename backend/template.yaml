AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Backend API for game key giveaway site

Globals:
  Function:
    Timeout: 20
    Runtime: go1.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        ENDPOINT_OVERRIDE: ''

Parameters:
  FacebookApiSecret:
    Type: String
    NoEcho: true
  FacebookApiId:
    Type: String
    NoEcho: true
  FacebookOwnerId:
    Type: String
    NoEcho: true
  AllowedOrigin:
    Type: String
    Default: https://giveaway.glasket.com

Resources:
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: CloudFront Access Identity

  FrontendBucket:
    Type: AWS::S3::Bucket

  BackendApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: Prod
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
        AllowMethods:
          - GET
          - POST
          - DELETE
          - OPTIONS
        AllowOrigins:
          - !Ref AllowedOrigin
        AllowCredentials: true

  FrontendDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: FrontendBucket
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
          - Id: Backend
            DomainName: !Sub '${BackendApi}.execute-api.${AWS::Region}.amazonaws.com'
            OriginPath: '/Prod'
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          TargetOriginId: FrontendBucket
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: true
        CacheBehaviors:
          - TargetOriginId: Backend
            PathPattern: 'api/*'
            DefaultTTL: 0
            MinTTL: 0
            MaxTTL: 0
            ViewerProtocolPolicy: https-only
            AllowedMethods: [GET, HEAD, OPTIONS, PUT, PATCH, POST, DELETE]
            ForwardedValues:
              QueryString: true
        Enabled: true
        DefaultRootObject: index.html

  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: KeyGiveawayFrontendPolicy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource: !Sub
              - 'arn:aws:s3:::${Bucket}/*'
              - Bucket: !Ref FrontendBucket
      Bucket: !Ref FrontendBucket

  SchedulerGroup:
    Type: AWS::Scheduler::ScheduleGroup
    Properties:
      Name: KeyGiveawayGroup

  SchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
      Policies:
        - PolicyName: execute-raffle-lambda
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${HandleRaffleFunction}'

  KeyGiveawayTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableName: KeyGiveaway

  AddRaffleEntryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: AddRaffleEntry
      CodeUri: ./deploy/AddRaffleEntry.zip
      Events:
        CatchAll:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /api/entry
            Method: POST

  AddRaffleEntryConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: AddRaffleEntryFunction
      Destination:
        Id: KeyGiveawayTable
      Permissions:
        - Write

  RemoveRaffleEntryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: RemoveRaffleEntry
      CodeUri: ./deploy/RemoveRaffleEntry.zip
      Events:
        CatchAll:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /api/entry
            Method: DELETE

  RemoveRaffleEntryConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: RemoveRaffleEntryFunction
      Destination:
        Id: KeyGiveawayTable
      Permissions:
        - Write

  GetDropItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: GetDropItems
      CodeUri: ./deploy/GetDropItems.zip
      Events:
        CatchAll:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /api/drop/{drop_id}
            Method: GET

  GetDropItemsConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: GetDropItemsFunction
      Destination:
        Id: KeyGiveawayTable
      Permissions:
        - Read

  GetDropsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: GetDrops
      CodeUri: ./deploy/GetDrops.zip
      Events:
        CatchAll:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /api/drops
            Method: GET

  GetDropsConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: GetDropsFunction
      Destination:
        Id: KeyGiveawayTable
      Permissions:
        - Read

  GetWonItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: GetWonItems
      CodeUri: ./deploy/GetWonItems.zip
      Events:
        CatchAll:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /api/won-items
            Method: GET

  GetWonItemsConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: GetWonItemsFunction
      Destination:
        Id: KeyGiveawayTable
      Permissions:
        - Read

  PingFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Ping
      CodeUri: ./deploy/Ping.zip
      Events:
        CatchAll:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /api/ping
            Method: GET

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Login
      Timeout: 10
      CodeUri: ./deploy/Login.zip
      Events:
        CatchAll:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /api/login
            Method: POST
      Environment:
        Variables:
          facebookApiId: !Ref FacebookApiId
          facebookApiSecret: !Ref FacebookApiSecret
          facebookOwnerId: !Ref FacebookOwnerId

  LogoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: Logout
      CodeUri: ./deploy/Logout.zip
      Events:
        CatchAll:
          Type: HttpApi
          Properties:
            ApiId: !Ref BackendApi
            Path: /api/logout
            Method: POST

  # Automated Call
  HandleRaffleFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: HandleRaffle
      CodeUri: ./deploy/HandleRaffle.zip
      Policies:
        - Statement:
            - Sid: DeleteSchedulePolicy
              Effect: Allow
              Action:
                - scheduler:DeleteSchedule
              Resource: !Sub 'arn:aws:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/KeyGiveawayGroup/*'

  HandleRaffleConnector:
    Type: AWS::Serverless::Connector
    Properties:
      Source:
        Id: HandleRaffleFunction
      Destination:
        Id: KeyGiveawayTable
      Permissions:
        - Read
        - Write

Outputs:
  Website:
    Value: !GetAtt FrontendDistribution.DomainName
